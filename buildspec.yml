version: 0.2
phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - npm install -g pnpm@7.13.0
      - npm install -g @microsoft/rush
      - npm install -g aws-cdk
      - export PATH=$PATH:$(npm bin -g)
      - export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
      - echo "ENV=$ENV"
      - echo "CODE_BUILD_ROLE=$CODE_BUILD_ROLE"
      - echo "STAGE_TYPE=$STAGE_TYPE"
      - echo "STAGE_NAME=$STAGE_NAME"
      - echo "USERPOOL_ID=$USERPOOL_ID"
      - echo "USERPOOL_CLIENT_ID=$USERPOOL_CLIENT_ID"
      - echo "POOL_DOMAIN=$POOL_DOMAIN"
      - echo "AWS_REGION=$AWS_REGION"
      - echo "ALL_TENANTS_SCOPE=$ALL_TENANTS_SCOPE"
      - export CDK_TOOLKIT_STACK_NAME=cdk-toolkit-$STAGE_NAME
  pre_build:
    commands:
      - echo "Validating CDK bootstrap template"
      - aws cloudformation validate-template --template-body file://bootstrap-template.yaml
      - echo "Bootstrapping CDK environment"
      - |
        cdk bootstrap aws://$AWS_ACCOUNT_ID/$AWS_REGION \
          --template-body file://bootstrap-template.yaml \
          --toolkit-stack-name $CDK_TOOLKIT_STACK_NAME \
          --qualifier $ENV
      - echo "Updating CDK role trust policies to allow CodeBuild Role to assume them"
      - cd deployment && chmod +x ./update-cdk-role-trust-policy.sh && ./update-cdk-role-trust-policy.sh $AWS_ACCOUNT_ID $CODE_BUILD_ROLE $CDK_TOOLKIT_STACK_NAME
  build:
    commands:
      # - echo "Starting build `date` `pwd`"
      # - chmod +x ./build-s3-dist.sh && ./build-s3-dist.sh $DIST_OUTPUT_BUCKET $SOLUTION_NAME $VERSION
      # - echo "Build completed `date`"
      # - echo "Starting open-source-dist `date` `pwd`"
      # - chmod +x ./build-open-source-dist.sh && ./build-open-source-dist.sh $SOLUTION_NAME
      # - echo "Open Source Dist completed `date`"
      - cd ..
      - rush update && rush build
  post_build:
    commands:
      - ls -al
      - cd ../solutions/deployment
      - ls -al
      - |
        rushx deploy -c region=$AWS_REGION \
          -c extUserPoolId=$USERPOOL_ID \
          -c extUserPoolClientId=$USERPOOL_CLIENT_ID \
          -c extUserPoolDomain=$POOL_DOMAIN \
          -c stage=$STAGE_NAME \
          -c stageType=$STAGE_TYPE \
          -c grantAccessAllTenantsScope=$ALL_TENANTS_SCOPE \
          -c enableMultiTenancy=true \
          -c qualifier=$ENV
      - echo "FHIRworks deployment succeeded"
      - echo "Setting SSM parameter $STAGE_NAME-fhirworks-url"
      - cd ../../deployment && chmod +x ./set-fhir-svc-ssm-param.sh && ./set-fhir-svc-ssm-param.sh $STAGE_NAME

artifacts:
  files:
    - solutions/**/*
    - fwoa-core/**/*
    - core/**/*
    - deployment/**/*
    - fwoa-tools/**/*
    - fwoa-utilities/**/*
    - solutions/**/*
    - buildspec-deploy.yml
    - buildspec.yml
    - CHANGELOG.md
    - LICENSE
    - NOTICE
    - CODE_OF_CONDUCT.md
    - CONTRIBUTING.md
    - README.md
    - .github/**/*
    - sonar-project.properties
    - .cfnnag_global_suppress_list
